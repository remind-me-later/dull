#[derive(Debug, Clone, Copy, PartialEq, Eq)]
pub enum Keyword {
    Abs,
    Acs,
    And,
    Aread,
    Arun,
    Asc,
    Asn,
    Atn,
    Beep,
    Break,
    Call,
    Chain,
    ChrDollar,
    Clear,
    Cload,
    Cls,
    Color,
    Coms,
    Console,
    Cont,
    Copy,
    Cos,
    Csave,
    Csize,
    Cursor,
    Data,
    Deg,
    Degree,
    Devs,
    Dim,
    Dms,
    Dte,
    End,
    Erl,
    Err,
    Error,
    Exp,
    Feed,
    For,
    Gcursor,
    Glcursor,
    Gosub,
    Goto,
    Gprint,
    Grad,
    Graph,
    If,
    InkeyDollar,
    Input,
    Instat,
    Int,
    Lcursor,
    LeftDollar,
    Len,
    Let,
    Lf,
    Line,
    List,
    Llist,
    Ln,
    Lock,
    Log,
    Lprint,
    Mem,
    Merge,
    MidDollar,
    New,
    Next,
    Not,
    Off,
    On,
    Opn,
    Or,
    Outstat,
    Pause,
    PeekMem0,
    PeekMem1,
    Pi,
    Point,
    PokeMem0,
    PokeMem1,
    Print,
    Radian,
    Random,
    Read,
    Rem,
    Restore,
    Return,
    RightDollar,
    Rinkeys,
    Rline,
    Rmt,
    Rnd,
    Rotate,
    Run,
    Setcom,
    Setdev,
    Sgn,
    Sin,
    Sorgn,
    Spaces,
    Sqr,
    Status,
    Step,
    Stop,
    StrDollar,
    Tab,
    Tan,
    Terminal,
    Test,
    Text,
    Then,
    Time,
    To,
    Transmit,
    Troff,
    Tron,
    Unlock,
    Using,
    Val,
    Wait,
    Zone,
}

impl Keyword {
    pub const LONGEST_SUFFIX_FIRST: [&'static str; 122] = [
        "GLCURSOR", "TERMINAL", "TRANSMIT", "CONSOLE", "GCURSOR", "LCURSOR", "OUTSTAT", "RESTORE",
        "RINKEY$", "CURSOR", "DEGREE", "GPRINT", "INKEY$", "INSTAT", "LPRINT", "RADIAN", "RANDOM",
        "RETURN", "RIGHT$", "ROTATE", "SETCOM", "SETDEV", "SPACE$", "STATUS", "UNLOCK", "COLOR",
        "AREAD", "BREAK", "CHAIN", "CLEAR", "CLOAD", "CSAVE", "CSIZE", "ERROR", "GOSUB", "GRAPH",
        "INPUT", "LEFT$", "LLIST", "MERGE", "PAUSE", "PEEK#", "POINT", "POKE#", "PRINT", "RLINE",
        "SORGN", "TROFF", "USING", "ARUN", "BEEP", "CALL", "CHR$", "COM$", "CONT", "COPY", "DATA",
        "DEVS", "FEED", "GOTO", "GRAD", "LINE", "LIST", "LOCK", "MID$", "NEXT", "PEEK", "POKE",
        "READ", "STEP", "STOP", "STR$", "TEST", "TEXT", "THEN", "TIME", "TRON", "WAIT", "ZONE",
        "ABS", "ACS", "AND", "ASC", "ASN", "ATN", "CLS", "COS", "DEG", "DIM", "DMS", "DTE", "END",
        "ERL", "ERR", "EXP", "FOR", "INT", "LEN", "LET", "LOG", "MEM", "NEW", "NOT", "OFF", "OPN",
        "REM", "RMT", "RND", "RUN", "SGN", "SIN", "SQR", "TAB", "TAN", "VAL", "LF", "IF", "LN",
        "ON", "OR", "PI", "TO",
    ];

    #[allow(dead_code)]
    pub const fn internal_code(&self) -> u16 {
        match self {
            Keyword::Abs => 0xF170,
            Keyword::Acs => 0xF174,
            Keyword::And => 0xF150,
            Keyword::Aread => 0xF180,
            Keyword::Arun => 0xF181,
            Keyword::Asc => 0xF160,
            Keyword::Asn => 0xF173,
            Keyword::Atn => 0xF175,
            Keyword::Beep => 0xF182,
            Keyword::Break => 0xF083,
            Keyword::Call => 0xF18A,
            Keyword::Chain => 0xF0B2,
            Keyword::ChrDollar => 0xF163,
            Keyword::Clear => 0xF187,
            Keyword::Cload => 0xF089,
            Keyword::Cls => 0xF088,
            Keyword::Coms => 0xE858,
            Keyword::Console => 0xF0B1,
            Keyword::Cont => 0xF183,
            Keyword::Color => 0xF0B5,
            Keyword::Copy => 0xF0B5,
            Keyword::Cos => 0xF17E,
            Keyword::Csave => 0xF095,
            Keyword::Csize => 0xE680,
            Keyword::Cursor => 0xF084,
            Keyword::Data => 0xF180,
            Keyword::Deg => 0xF165,
            Keyword::Degree => 0xF18C,
            Keyword::Devs => 0xE857,
            Keyword::Dim => 0xF18B,
            Keyword::Dms => 0xF186,
            Keyword::Dte => 0xF864,
            Keyword::End => 0xF18E,
            Keyword::Erl => 0xF053,
            Keyword::Err => 0xF052,
            Keyword::Error => 0xF184,
            Keyword::Exp => 0xF178,
            Keyword::Feed => 0xF0B0,
            Keyword::For => 0xF1A5,
            Keyword::Gcursor => 0xF093,
            Keyword::Glcursor => 0xE682,
            Keyword::Gosub => 0xF194,
            Keyword::Goto => 0xF192,
            Keyword::Gprint => 0xF09F,
            Keyword::Grad => 0xF186,
            Keyword::Graph => 0xE681,
            Keyword::If => 0xF196,
            Keyword::InkeyDollar => 0xF15C,
            Keyword::Input => 0xF091,
            Keyword::Instat => 0xE859,
            Keyword::Int => 0xF171,
            Keyword::Lcursor => 0xE683,
            Keyword::LeftDollar => 0xF17A,
            Keyword::Len => 0xF164,
            Keyword::Let => 0xF198,
            Keyword::Lf => 0xF0B6,
            Keyword::Line => 0xF087,
            Keyword::List => 0xF090,
            Keyword::Llist => 0xF088,
            Keyword::Ln => 0xF176,
            Keyword::Lock => 0xF185,
            Keyword::Log => 0xF177,
            Keyword::Lprint => 0xF089,
            Keyword::Mem => 0xF158,
            Keyword::Merge => 0xF088,
            Keyword::MidDollar => 0xF17B,
            Keyword::New => 0xF19B,
            Keyword::Next => 0xF19A,
            Keyword::Not => 0xF160,
            Keyword::Off => 0xF119,
            Keyword::On => 0xF19C,
            Keyword::Opn => 0xF190,
            Keyword::Or => 0xF151,
            Keyword::Outstat => 0xE880,
            Keyword::Pause => 0xF1A2,
            Keyword::PeekMem0 => 0xF166,
            Keyword::PeekMem1 => 0xF166,
            Keyword::Pi => 0xF150,
            Keyword::Point => 0xF168,
            Keyword::PokeMem0 => 0xF1A1,
            Keyword::PokeMem1 => 0xF1A0,
            Keyword::Print => 0xF097,
            Keyword::Radian => 0xF1AA,
            Keyword::Random => 0xF1A8,
            Keyword::Read => 0xF1AE,
            Keyword::Rem => 0xF1AB,
            Keyword::Restore => 0xF1A7,
            Keyword::Return => 0xF199,
            Keyword::RightDollar => 0xF172,
            Keyword::Rinkeys => 0xE85A,
            Keyword::Rline => 0xF0BA,
            Keyword::Rmt => 0xE7A9,
            Keyword::Rnd => 0xF17C,
            Keyword::Rotate => 0xE685,
            Keyword::Run => 0xF1A4,
            Keyword::Setcom => 0xE882,
            Keyword::Setdev => 0xE886,
            Keyword::Sgn => 0xF179,
            Keyword::Sin => 0xF170,
            Keyword::Sorgn => 0xE884,
            Keyword::Spaces => 0xF061,
            Keyword::Sqr => 0xF16B,
            Keyword::Status => 0xF167,
            Keyword::Step => 0xF1A0,
            Keyword::Stop => 0xF1A4,
            Keyword::StrDollar => 0xF161,
            Keyword::Tab => 0xF0B0,
            Keyword::Tan => 0xF17F,
            Keyword::Terminal => 0xE883,
            Keyword::Test => 0xF0BC,
            Keyword::Text => 0xE686,
            Keyword::Then => 0xF1AE,
            Keyword::Time => 0xF158,
            Keyword::To => 0xF1B1,
            Keyword::Transmit => 0xE885,
            Keyword::Troff => 0xF1B0,
            Keyword::Tron => 0xF1AF,
            Keyword::Unlock => 0xF1B6,
            Keyword::Using => 0xF085,
            Keyword::Val => 0xF162,
            Keyword::Wait => 0xF1B3,
            Keyword::Zone => 0xF0B4,
        }
    }
}

impl TryFrom<&str> for Keyword {
    type Error = &'static str;

    fn try_from(s: &str) -> Result<Self, <Keyword as TryFrom<&str>>::Error> {
        Ok(match s {
            "ABS" => Keyword::Abs,
            "ACS" => Keyword::Acs,
            "AND" => Keyword::And,
            "AREAD" => Keyword::Aread,
            "ARUN" => Keyword::Arun,
            "ASC" => Keyword::Asc,
            "ASN" => Keyword::Asn,
            "ATN" => Keyword::Atn,
            "BEEP" => Keyword::Beep,
            "BREAK" => Keyword::Break,
            "CALL" => Keyword::Call,
            "CHAIN" => Keyword::Chain,
            "CHR$" => Keyword::ChrDollar,
            "CLEAR" => Keyword::Clear,
            "CLOAD" => Keyword::Cload,
            "CLS" => Keyword::Cls,
            "COM$" => Keyword::Coms,
            "CONSOLE" => Keyword::Console,
            "CONT" => Keyword::Cont,
            "COLOR" => Keyword::Color,
            "COPY" => Keyword::Copy,
            "COS" => Keyword::Cos,
            "CSAVE" => Keyword::Csave,
            "CSIZE" => Keyword::Csize,
            "CURSOR" => Keyword::Cursor,
            "DATA" => Keyword::Data,
            "DEG" => Keyword::Deg,
            "DEGREE" => Keyword::Degree,
            "DEVS" => Keyword::Devs,
            "DIM" => Keyword::Dim,
            "DMS" => Keyword::Dms,
            "DTE" => Keyword::Dte,
            "END" => Keyword::End,
            "ERL" => Keyword::Erl,
            "ERR" => Keyword::Err,
            "ERROR" => Keyword::Error,
            "EXP" => Keyword::Exp,
            "FEED" => Keyword::Feed,
            "FOR" => Keyword::For,
            "GCURSOR" => Keyword::Gcursor,
            "GLCURSOR" => Keyword::Glcursor,
            "GOSUB" => Keyword::Gosub,
            "GOTO" => Keyword::Goto,
            "GPRINT" => Keyword::Gprint,
            "GRAD" => Keyword::Grad,
            "GRAPH" => Keyword::Graph,
            "IF" => Keyword::If,
            "INKEY$" => Keyword::InkeyDollar,
            "INPUT" => Keyword::Input,
            "INSTAT" => Keyword::Instat,
            "INT" => Keyword::Int,
            "LCURSOR" => Keyword::Lcursor,
            "LEFT$" => Keyword::LeftDollar,
            "LEN" => Keyword::Len,
            "LET" => Keyword::Let,
            "LF" => Keyword::Lf,
            "LINE" => Keyword::Line,
            "LIST" => Keyword::List,
            "LLIST" => Keyword::Llist,
            "LN" => Keyword::Ln,
            "LOCK" => Keyword::Lock,
            "LOG" => Keyword::Log,
            "LPRINT" => Keyword::Lprint,
            "MEM" => Keyword::Mem,
            "MERGE" => Keyword::Merge,
            "MID$" => Keyword::MidDollar,
            "NEW" => Keyword::New,
            "NEXT" => Keyword::Next,
            "NOT" => Keyword::Not,
            "OFF" => Keyword::Off,
            "ON" => Keyword::On,
            "OPN" => Keyword::Opn,
            "OR" => Keyword::Or,
            "OUTSTAT" => Keyword::Outstat,
            "PAUSE" => Keyword::Pause,
            "PEEK" => Keyword::PeekMem0,
            "PEEK#" => Keyword::PeekMem1,
            "PI" => Keyword::Pi,
            "POINT" => Keyword::Point,
            "POKE" => Keyword::PokeMem0,
            "POKE#" => Keyword::PokeMem1,
            "PRINT" => Keyword::Print,
            "RADIAN" => Keyword::Radian,
            "RANDOM" => Keyword::Random,
            "READ" => Keyword::Read,
            "REM" => Keyword::Rem,
            "RESTORE" => Keyword::Restore,
            "RETURN" => Keyword::Return,
            "RIGHT$" => Keyword::RightDollar,
            "RINKEY$" => Keyword::Rinkeys,
            "RLINE" => Keyword::Rline,
            "RMT" => Keyword::Rmt,
            "RND" => Keyword::Rnd,
            "ROTATE" => Keyword::Rotate,
            "RUN" => Keyword::Run,
            "SETCOM" => Keyword::Setcom,
            "SETDEV" => Keyword::Setdev,
            "SGN" => Keyword::Sgn,
            "SIN" => Keyword::Sin,
            "SORGN" => Keyword::Sorgn,
            "SPACE$" => Keyword::Spaces,
            "SQR" => Keyword::Sqr,
            "STATUS" => Keyword::Status,
            "STEP" => Keyword::Step,
            "STOP" => Keyword::Stop,
            "STR$" => Keyword::StrDollar,
            "TAB" => Keyword::Tab,
            "TAN" => Keyword::Tan,
            "TERMINAL" => Keyword::Terminal,
            "TEST" => Keyword::Test,
            "TEXT" => Keyword::Text,
            "THEN" => Keyword::Then,
            "TIME" => Keyword::Time,
            "TO" => Keyword::To,
            "TRANSMIT" => Keyword::Transmit,
            "TROFF" => Keyword::Troff,
            "TRON" => Keyword::Tron,
            "UNLOCK" => Keyword::Unlock,
            "USING" => Keyword::Using,
            "VAL" => Keyword::Val,
            "WAIT" => Keyword::Wait,
            "ZONE" => Keyword::Zone,
            _ => Err("Unknown keyword")?,
        })
    }
}

impl Keyword {
    pub const fn as_str(&self) -> &'static str {
        match self {
            Keyword::Abs => "ABS",
            Keyword::Acs => "ACS",
            Keyword::And => "AND",
            Keyword::Aread => "AREAD",
            Keyword::Arun => "ARUN",
            Keyword::Asc => "ASC",
            Keyword::Asn => "ASN",
            Keyword::Atn => "ATN",
            Keyword::Beep => "BEEP",
            Keyword::Break => "BREAK",
            Keyword::Call => "CALL",
            Keyword::Chain => "CHAIN",
            Keyword::ChrDollar => "CHR$",
            Keyword::Clear => "CLEAR",
            Keyword::Cload => "CLOAD",
            Keyword::Cls => "CLS",
            Keyword::Coms => "COM$",
            Keyword::Console => "CONSOLE",
            Keyword::Cont => "CONT",
            Keyword::Color => "COLOR",
            Keyword::Copy => "COPY",
            Keyword::Cos => "COS",
            Keyword::Csave => "CSAVE",
            Keyword::Csize => "CSIZE",
            Keyword::Cursor => "CURSOR",
            Keyword::Data => "DATA",
            Keyword::Deg => "DEG",
            Keyword::Degree => "DEGREE",
            Keyword::Devs => "DEVS",
            Keyword::Dim => "DIM",
            Keyword::Dms => "DMS",
            Keyword::Dte => "DTE",
            Keyword::End => "END",
            Keyword::Erl => "ERL",
            Keyword::Err => "ERR",
            Keyword::Error => "ERROR",
            Keyword::Exp => "EXP",
            Keyword::Feed => "FEED",
            Keyword::For => "FOR",
            Keyword::Gcursor => "GCURSOR",
            Keyword::Glcursor => "GLCURSOR",
            Keyword::Gosub => "GOSUB",
            Keyword::Goto => "GOTO",
            Keyword::Gprint => "GPRINT",
            Keyword::Grad => "GRAD",
            Keyword::Graph => "GRAPH",
            Keyword::If => "IF",
            Keyword::InkeyDollar => "INKEY$",
            Keyword::Input => "INPUT",
            Keyword::Instat => "INSTAT",
            Keyword::Int => "INT",
            Keyword::Lcursor => "LCURSOR",
            Keyword::LeftDollar => "LEFT$",
            Keyword::Len => "LEN",
            Keyword::Let => "LET",
            Keyword::Lf => "LF",
            Keyword::Line => "LINE",
            Keyword::List => "LIST",
            Keyword::Llist => "LLIST",
            Keyword::Ln => "LN",
            Keyword::Lock => "LOCK",
            Keyword::Log => "LOG",
            Keyword::Lprint => "LPRINT",
            Keyword::Mem => "MEM",
            Keyword::Merge => "MERGE",
            Keyword::MidDollar => "MID$",
            Keyword::New => "NEW",
            Keyword::Next => "NEXT",
            Keyword::Not => "NOT",
            Keyword::Off => "OFF",
            Keyword::On => "ON",
            Keyword::Opn => "OPN",
            Keyword::Or => "OR",
            Keyword::Outstat => "OUTSTAT",
            Keyword::Pause => "PAUSE",
            Keyword::PeekMem0 => "PEEK",
            Keyword::PeekMem1 => "PEEK#",
            Keyword::Pi => "PI",
            Keyword::Point => "POINT",
            Keyword::PokeMem0 => "POKE",
            Keyword::PokeMem1 => "POKE#",
            Keyword::Print => "PRINT",
            Keyword::Radian => "RADIAN",
            Keyword::Random => "RANDOM",
            Keyword::Read => "READ",
            Keyword::Rem => "REM",
            Keyword::Restore => "RESTORE",
            Keyword::Return => "RETURN",
            Keyword::RightDollar => "RIGHT$",
            Keyword::Rinkeys => "RINKEY$",
            Keyword::Rline => "RLINE",
            Keyword::Rmt => "RMT",
            Keyword::Rnd => "RND",
            Keyword::Rotate => "ROTATE",
            Keyword::Run => "RUN",
            Keyword::Setcom => "SETCOM",
            Keyword::Setdev => "SETDEV",
            Keyword::Sgn => "SGN",
            Keyword::Sin => "SIN",
            Keyword::Sorgn => "SORGN",
            Keyword::Spaces => "SPACE$",
            Keyword::Sqr => "SQR",
            Keyword::Status => "STATUS",
            Keyword::Step => "STEP",
            Keyword::Stop => "STOP",
            Keyword::StrDollar => "STR$",
            Keyword::Tab => "TAB",
            Keyword::Tan => "TAN",
            Keyword::Terminal => "TERMINAL",
            Keyword::Test => "TEST",
            Keyword::Text => "TEXT",
            Keyword::Then => "THEN",
            Keyword::Time => "TIME",
            Keyword::To => "TO",
            Keyword::Transmit => "TRANSMIT",
            Keyword::Troff => "TROFF",
            Keyword::Tron => "TRON",
            Keyword::Unlock => "UNLOCK",
            Keyword::Using => "USING",
            Keyword::Val => "VAL",
            Keyword::Wait => "WAIT",
            Keyword::Zone => "ZONE",
        }
    }
}

impl std::fmt::Display for Keyword {
    fn fmt(&self, f: &mut std::fmt::Formatter<'_>) -> std::fmt::Result {
        let keyword_str: &str = self.as_str();
        write!(f, "{keyword_str}")
    }
}
